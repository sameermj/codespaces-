name: CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --no-restore --verbosity normal

    - name: Download ngrok
      run: Invoke-WebRequest -Uri https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

    - name: Extract ngrok
      run: Expand-Archive -Path ngrok.zip -DestinationPath ngrok

    - name: Authenticate ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        2sXEjjaDPFuI9xLzMmYkz18YrxS_37otnTB16e2ybqPceAreZ: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable Remote Desktop
      run: |
        Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText -Force "YourPasswordHere")

    - name: Create ngrok Tunnel
      run: .\ngrok\ngrok.exe tcp 3389

    - name: Upload ngrok logs
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: ngrok-logs
        path: ngrok.log
